{"version":3,"sources":["components/pesquisa/index.tsx","components/resultado/index.tsx","components/lista/index.tsx","components/carregamento/index.tsx","components/erro/index.tsx","components/app/index.tsx","index.tsx"],"names":["Pesquisa","props","useState","focus","setFocus","className","up","activeTitle","onFocus","onBlur","onSubmit","event","handleSearch","preventDefault","type","name","placeholder","value","terms","onChange","handleTerms","target","replace","required","autoFocus","xmlns","viewBox","role","d","onClick","handleClear","Resultado","likeRatio","stats","Math","round","Number","parseInt","likeCount","dislikeCount","active","hidden","tabIndex","handleTitle","video","snippet","title","handleSelect","id","videoId","src","thumbnails","high","url","alt","allow","allowFullScreen","profileImg","channelTitle","viewCount","toString","style","flex","isNaN","description","Lista","transition","results","map","r","channels","channelId","statistics","activeResult","handleActiveResult","Carregamento","hasMoreResults","animationDelay","Erro","noResults","errorInfo","code","dangerouslySetInnerHTML","__html","message","App","setTerms","setResults","setStatistics","setChannels","pageToken","setPageToken","setActiveResult","setActiveTitle","listTransition","setListTransition","searchError","setSearchError","searchEnd","setSearchEnd","prevId","setTimeout","document","getElementsByClassName","scrollIntoView","behavior","block","window","scrollTo","top","left","useEffect","onscroll","innerHeight","scrollY","body","offsetHeight","page","xmlResults","XMLHttpRequest","onreadystatechange","readyState","status","response","JSON","parse","responseText","console","log","items","length","newItems","filter","i","Object","keys","includes","concat","videoIDs","join","channelIDs","xmlChannels","newChannels","reduce","ref","default","newChannelRef","entries","key","open","send","xmlDetails","newStats","newStatsRef","nextPageToken","error","continueSearch","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4cc22b2d.chunk.js","sourcesContent":["import React, { ChangeEvent, FormEvent, useState } from 'react';\r\n\r\n// Componente de pesquisa\r\nconst Pesquisa = (props: {\r\n        terms: string\r\n        handleTerms: (terms: string) => void,\r\n        handleSearch: () => void,\r\n        up: boolean,\r\n        activeTitle: string | null,\r\n        handleClear: () => void\r\n    }) => {\r\n\r\n    // Hooks de estado\r\n    const [focus, setFocus] = useState(false);\r\n    //const [terms, setTerms] = useState('');\r\n\r\n    // Receber input do usuário\r\n    function changeTerms(event: ChangeEvent<HTMLInputElement>) {\r\n        props.handleTerms(event.target.value.replace(/[^a-zA-Z0-9 ]/g, ''));\r\n    }\r\n\r\n    // Realizar pesquisa com os termos atuais\r\n    function search(event: FormEvent) {\r\n        props.handleSearch();\r\n        event.preventDefault();\r\n    }\r\n\r\n    // Renderizar\r\n    return (\r\n        <header className={'pesquisa' + (props.up ? ' pesquisa_top' : '') + (props.activeTitle ? ' pesquisa_left' : '')}>\r\n            <div className=\"pesquisa__metade\">\r\n                <form className={'pesquisa__barra' + (focus ? ' pesquisa__barra_foco' : '')}\r\n                    onFocus={() => {setFocus(true)}}\r\n                    onBlur={() => {setFocus(false)}}\r\n                    onSubmit={search}>\r\n                    <div className=\"pesquisa__fundo\">\r\n                        <input\r\n                            className=\"pesquisa__input\"\r\n                            type=\"text\"\r\n                            name=\"terms\"\r\n                            placeholder=\"Pesquisar...\"\r\n                            value={props.terms}\r\n                            onChange={changeTerms}\r\n                            required\r\n                            autoFocus\r\n                        />\r\n                    </div>\r\n                    <button className=\"pesquisa__buscar\" type=\"submit\">\r\n                        <svg className=\"pesquisa__icone\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" role=\"img\">\r\n                            <title>Buscar</title>\r\n                            <path d=\"M23.822 20.88l-6.353-6.354c.93-1.465 1.467-3.2\r\n                                1.467-5.059.001-5.219-4.247-9.467-9.468-9.467s-9.468 4.248-9.468 9.468c0\r\n                                5.221 4.247 9.469 9.468 9.469 1.768 0 3.421-.487 4.839-1.333l6.396 6.396\r\n                                3.119-3.12zm-20.294-11.412c0-3.273 2.665-5.938 5.939-5.938 3.275 0 5.94\r\n                                2.664 5.94 5.938 0 3.275-2.665 5.939-5.94 5.939-3.274 0-5.939-2.664-5.939-5.939z\"\r\n                            />\r\n                        </svg>\r\n                    </button>\r\n                </form>\r\n            </div>\r\n            <div className=\"pesquisa__metade\">\r\n                <div className=\"pesquisa__barra\">\r\n                    <button className=\"pesquisa__voltar\" type=\"button\" onClick={() => {props.handleClear()}}>\r\n                        <svg className=\"pesquisa__icone\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" role=\"img\">\r\n                            <title>Voltar</title>\r\n                            <path d=\"M16.67 0l2.83 2.829-9.339 9.175 9.339 9.167-2.83 2.829-12.17-11.996z\"/>\r\n                        </svg>\r\n                    </button>\r\n                    <div className=\"pesquisa__titulo\">\r\n                        <p className=\"pesquisa__texto\">\r\n                            {props.activeTitle}\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Pesquisa;","import React from 'react';\r\n\r\nconst Resultado = (props: {\r\n        video: any,\r\n        profileImg: string,\r\n        stats: any,\r\n        active: boolean,\r\n        hidden: boolean,\r\n        handleSelect: (id: string | null) => void,\r\n        handleTitle: (title: string |null) => void\r\n    }) => {\r\n\r\n    const likeRatio = props.stats ?\r\n        Math.round(\r\n            Number.parseInt(props.stats.likeCount) / \r\n            (Number.parseInt(props.stats.likeCount) + Number.parseInt(props.stats.dislikeCount)) * 100\r\n        )\r\n    : 0;\r\n    \r\n    return (\r\n        <li\r\n            key={props.video.id.videoId}\r\n            className={\r\n                'resultado' +\r\n                (props.active ? ' resultado_ativo' : '') +\r\n                (props.hidden ? ' resultado_escondido' : '')\r\n            }\r\n            tabIndex={0}\r\n            onClick={(props.active ? () => {} : () => {\r\n                props.handleTitle(props.video.snippet.title);\r\n                props.handleSelect(props.video.id.videoId);\r\n            })}\r\n        >\r\n            <div className=\"resultado__conteudo\">\r\n                <div className=\"resultado__tela\">\r\n                    <img\r\n                        className=\"resultado__thumbnail\"\r\n                        src={props.video.snippet.thumbnails.high.url}\r\n                        alt={'Thumbnail do vídeo \"' + props.video.snippet.title + '\"'}\r\n                    />\r\n                    <iframe\r\n                        className=\"resultado__video\"\r\n                        title={props.video.id.videoId}\r\n                        src={'https://www.youtube.com/embed/' + props.video.id.videoId}\r\n                        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n                        allowFullScreen>\r\n                    </iframe>\r\n                </div>\r\n                <div className=\"resultado__disposicao\">\r\n                    <div className=\"resultado__info\">\r\n                        <img\r\n                            className=\"resultado__imagem\" \r\n                            src={props.profileImg}\r\n                            alt={'Imagem de perfil de ' + props.video.snippet.channelTitle}\r\n                        />\r\n                        <div className=\"resultado__dados\">\r\n                            <div className={'resultado__titulo ' + props.video.id.videoId}>\r\n                                {props.video.snippet.title}\r\n                            </div>\r\n                            <div className=\"resultado__canal\">\r\n                                {props.video.snippet.channelTitle}\r\n                            </div>\r\n                            <div className=\"resultado__visualizacoes\">\r\n                                {props.stats?.viewCount.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\") + ' Visualizações'}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={'interacao' + (props.active ? ' interacao_ativa' : '')}>\r\n                        <div className=\"interacao__contagem\">\r\n                            <div className=\"interacao__metade\">\r\n                                <svg className=\"interacao__like\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" role=\"img\">\r\n                                    <title>Like</title>\r\n                                    <path d=\"M5 22h-5v-12h5v12zm17.615-8.412c-.857-.115-.578-.734.031-.922.521-.16\r\n                                        1.354-.5 1.354-1.51\r\n                                        0-.672-.5-1.562-2.271-1.49-1.228.05-3.666-.198-4.979-.885.906-3.656.688-8.781-1.688-8.781-1.594\r\n                                        0-1.896 1.807-2.375 3.469-1.221 4.242-3.312 6.017-5.687 6.885v10.878c4.382.701 6.345 2.768\r\n                                        10.505 2.768 3.198 0 4.852-1.735 4.852-2.666\r\n                                        0-.335-.272-.573-.96-.626-.811-.062-.734-.812.031-.953 1.268-.234 1.826-.914 1.826-1.543\r\n                                        0-.529-.396-1.022-1.098-1.181-.837-.189-.664-.757.031-.812 1.133-.09 1.688-.764 1.688-1.41\r\n                                        0-.565-.424-1.109-1.26-1.221z\"\r\n                                    />\r\n                                </svg>\r\n                                <p className=\"interacao__numero\">\r\n                                    {props.stats?.likeCount?.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\")}\r\n                                </p>\r\n                            </div>\r\n                            <div className=\"interacao__metade\">\r\n                                <p className=\"interacao__numero\">\r\n                                    {props.stats?.dislikeCount?.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\")}\r\n                                </p>\r\n                                <svg className=\"interacao__dislike\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" role=\"img\">\r\n                                    <title>Dislike</title>\r\n                                    <path d=\"M5 14h-5v-12h5v12zm18.875-4.809c0-.646-.555-1.32-1.688-1.41-.695-.055-.868-.623-.031-.812.701-.159\r\n                                    1.098-.652 1.098-1.181 0-.629-.559-1.309-1.826-1.543-.766-.141-.842-.891-.031-.953.688-.053.96-.291.96-.626-.001-.931-1.654-2.666-4.852-2.666-4.16\r\n                                    0-6.123 2.067-10.505 2.768v10.878c2.375.869 4.466 2.644 5.688 6.886.478 1.661.781 3.468\r\n                                    2.374 3.468 2.375 0 2.594-5.125 1.688-8.781 1.312-.688 3.751-.936 4.979-.885 1.771.072\r\n                                    2.271-.818 2.271-1.49 0-1.011-.833-1.35-1.354-1.51-.609-.188-.889-.807-.031-.922.836-.112\r\n                                    1.26-.656 1.26-1.221z\"\r\n                                />\r\n                                </svg>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"interacao__barra\">\r\n                            <div className=\"interacao__barraLike\"\r\n                                style={{flex: (Number.isNaN(likeRatio) ? 0 : likeRatio)}}>\r\n                            </div>\r\n                            <div className=\"interacao__barraMeio\"></div>\r\n                            <div className=\"interacao__barraDislike\"\r\n                                style={{flex: (Number.isNaN(likeRatio) ? 0 : (100 - likeRatio))}}>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"resultado__descricao\">\r\n                    {props.active ? props.stats?.description : props.video.snippet.description}\r\n                </div>\r\n            </div>\r\n            <button className=\"resultado__detalhes\"\r\n                type=\"button\"\r\n                tabIndex={-1}\r\n                onClick={(props.active ? () => {\r\n                    props.handleTitle(null);\r\n                    props.handleSelect(null);\r\n                } : () => {})}>\r\n                {(props.active ? '-  Voltar' : '+  Detalhes')}\r\n            </button>\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default Resultado;","import React, { useState } from 'react';\r\nimport Resultado from '../resultado';\r\n\r\nexport interface ChannelRef {\r\n\t[index: string]: string\r\n}\r\nexport interface StatsRef {\r\n\t[index: string]: {\r\n\t\tdislikeCount: number;\r\n\t\tlikeCount: number;\r\n        viewCount: number;\r\n        description: string;\r\n\t}\r\n}\r\n\r\nconst Lista = (props: {\r\n    results: Array<never> | null,\r\n    statistics: StatsRef,\r\n    channels: ChannelRef,\r\n    handleTitle: (title: string | null) => void,\r\n    activeResult: string | null,\r\n    handleActiveResult: (id: string | null) => void,\r\n    transition: boolean\r\n    }) => {\r\n\r\n    return (\r\n        <ul className={'lista' + (props.transition ? ' lista_transicao' : '')}>\r\n            {props.results?.map((r: any) => {\r\n            return (\r\n                <Resultado\r\n                    key={r.id.videoId}\r\n                    video={r}\r\n                    profileImg={props.channels[r.snippet.channelId]}\r\n                    stats={props.statistics[r.id.videoId]}\r\n                    active={(props.activeResult === r.id.videoId)}\r\n                    hidden={(props.activeResult !== null)}\r\n                    handleSelect={props.handleActiveResult}\r\n                    handleTitle={props.handleTitle}\r\n                />\r\n            )\r\n            })}\r\n        </ul>\r\n    );\r\n}\r\n\r\nexport default Lista;","import React from 'react';\r\n\r\nconst Carregamento = (props: {hasMoreResults: boolean}) => {\r\n    return (\r\n        <footer className=\"carregamento\">\r\n            {props.hasMoreResults ?\r\n            <div className=\"carregamento__animacao\">\r\n                <div className=\"carregamento__ponto\" style={{animationDelay: '0s'}}></div>\r\n                <div className=\"carregamento__ponto\" style={{animationDelay: '.1s'}}></div>\r\n                <div className=\"carregamento__ponto\" style={{animationDelay: '.2s'}}></div>\r\n            </div>\r\n            :\r\n            <p className=\"carregamento__fim\">Fim dos resultados</p>}\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Carregamento;","import React from 'react';\r\n\r\nconst Erro = (props: {errorInfo: any, noResults: boolean}) => {\r\n    return (\r\n        <div className=\"erro\">\r\n            <p className=\"erro__emote\">\r\n                {props.noResults ?\r\n                'Nada :('\r\n                :\r\n                (props.errorInfo.code + ' :(')}\r\n            </p>\r\n            {props.errorInfo ?\r\n            <p className=\"erro__texto\" dangerouslySetInnerHTML={{__html: props.errorInfo.message}}></p>\r\n            :\r\n            <p className=\"erro__texto\">\r\n                Não encontramos nenhum resultado. Tente novamente com outros termos de pesquisa.\r\n            </p>}\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Erro;","import React, { useEffect, useState } from 'react';\r\nimport Pesquisa from '../pesquisa';\r\nimport Lista, {ChannelRef, StatsRef} from '../lista';\r\nimport Carregamento from '../carregamento';\r\nimport Erro from '../erro';\r\n\r\nconst App = () => {\r\n\r\n    // Hooks de estado\r\n    const [terms, setTerms] = useState('');\r\n\tconst [results, setResults] = useState<Array<never> | null>(null);\r\n\tconst [statistics, setStatistics] = useState<StatsRef>({});\r\n    const [channels, setChannels] = useState<ChannelRef>({});\r\n    const [pageToken, setPageToken] = useState('');\r\n    const [activeResult, setActiveResult] = useState<string | null>(null);\r\n    const [activeTitle, setActiveTitle] = useState<string | null>(null);\r\n    const [listTransition, setListTransition] = useState(false);\r\n    const [searchError, setSearchError] = useState<any>(null);\r\n    const [searchEnd, setSearchEnd] = useState(false);\r\n    // Hooks de efeito\r\n    useEffect(() => {\r\n        if (pageToken !== '') window.onscroll = () => {\r\n            if (activeResult === null &&\r\n                searchError === null &&\r\n                searchEnd === false &&\r\n                (window.innerHeight + window.scrollY) >= document.body.offsetHeight) {\r\n                continueSearch(pageToken);\r\n                window.onscroll = null;\r\n            }\r\n        }\r\n    }, [pageToken, statistics, channels, activeResult, searchEnd, searchError])\r\n\r\n\t// Realizar pesquisa com os termos atuais\r\n    function search() {\r\n        // Request para os snippets\r\n        const xmlResults = new XMLHttpRequest();\r\n        xmlResults.onreadystatechange = () => {\r\n            if (xmlResults.readyState === 4 && xmlResults.status === 200) {\r\n                const response = JSON.parse(xmlResults.responseText);\r\n                console.log(response);\r\n                // Resetar e abortar se não houver resultados\r\n                if (response.items.length <= 0) {\r\n                    setResults(null);\r\n                    setPageToken('');\r\n                    setStatistics({});\r\n                    setChannels({});\r\n                    setSearchError(null);\r\n                    setSearchEnd(true);\r\n                    return;\r\n                }\r\n                // Do contrário, preparar as próximas duas requests\r\n                setResults(response.items);\r\n                setSearchEnd(false);\r\n                setSearchError(null);\r\n                window.scrollTo({top: 0, left: 0, behavior: \"smooth\"});\r\n\t\t\t\tconst videoIDs: string = response.items.map((i: any) => i.id.videoId).join();\r\n\t\t\t\tconst channelIDs: string = response.items.map((i: any) => i.snippet.channelId).join();\r\n\t\t\t\t// Segunda request usando as IDs dos canais para conseguir suas imagens\r\n\t\t\t\tconst xmlChannels = new XMLHttpRequest();\r\n\t\t\t\txmlChannels.onreadystatechange = () => {\r\n                    if (xmlChannels.readyState === 4 && xmlChannels.status === 200) {\r\n                        console.log(JSON.parse(xmlChannels.responseText));\r\n                        const newChannels = JSON.parse(xmlChannels.responseText).items.reduce(\r\n                            (ref: any, i: any) => {\r\n                                ref[i.id] = i.snippet.thumbnails.default.url;\r\n                                return ref;\r\n                            }, {}\r\n                        );\r\n                        setChannels(newChannels);\r\n                    }\r\n                }\r\n                xmlChannels.open(\r\n                    'GET',\r\n                    'https://www.googleapis.com/youtube/v3/channels?part=snippet&id=' +\r\n                    channelIDs + \r\n                    '&key=AIzaSyBbS29keWaqCw9J7NLNfhxFbvc0c5ceGIc'\r\n                );\r\n                xmlChannels.send();\r\n                // Terceira request usando as IDs dos videos para conseguir seus detalhes\r\n                const xmlDetails = new XMLHttpRequest();\r\n                xmlDetails.onreadystatechange = () => {\r\n                    if (xmlDetails.readyState === 4 && xmlDetails.status === 200) {\r\n                        console.log(JSON.parse(xmlDetails.responseText));\r\n                        const newStats = JSON.parse(xmlDetails.responseText).items.reduce(\r\n                            (ref: any, i: any) => {\r\n                                ref[i.id] = {\r\n                                    dislikeCount: i.statistics.dislikeCount,\r\n                                    likeCount: i.statistics.likeCount,\r\n                                    viewCount: i.statistics.viewCount,\r\n                                    description: i.snippet.description\r\n                                };\r\n                                return ref;\r\n                            }, {}\r\n                        );\r\n                        setStatistics(newStats);\r\n                    }\r\n                }\r\n                xmlDetails.open(\r\n                    'GET',\r\n                    'https://www.googleapis.com/youtube/v3/videos?part=statistics,snippet&id=' +\r\n                    videoIDs + \r\n                    '&key=AIzaSyBbS29keWaqCw9J7NLNfhxFbvc0c5ceGIc'\r\n                );\r\n                xmlDetails.send();\r\n                // Atualizar a token para o scroll infinito\r\n                if (response.nextPageToken) {\r\n                    setPageToken(response.nextPageToken);\r\n                } else {\r\n                    setPageToken('');\r\n                    setSearchEnd(true);\r\n                }\r\n            } else if (xmlResults.readyState === 4 && xmlResults.status >= 400) {\r\n                setSearchError(JSON.parse(xmlResults.responseText).error);\r\n                console.log(JSON.parse(xmlResults.responseText));\r\n            }\r\n        };\r\n        xmlResults.open(\r\n            'GET',\r\n            'https://www.googleapis.com/youtube/v3/search?part=snippet&type=video&videoEmbeddable=true&maxResults=12&q=' +\r\n            terms.replace(/[^a-zA-Z0-9 ]/g, '') +\r\n            '&key=AIzaSyBbS29keWaqCw9J7NLNfhxFbvc0c5ceGIc'\r\n        );\r\n        xmlResults.send();\r\n    }\r\n\r\n    // Estender a pesquisa à próxima página\r\n    function continueSearch(page: string) {\r\n        // Request para os snippets\r\n        const xmlResults = new XMLHttpRequest();\r\n        xmlResults.onreadystatechange = () => {\r\n            if (xmlResults.readyState === 4 && xmlResults.status === 200) {\r\n                const response = JSON.parse(xmlResults.responseText);\r\n                console.log(response);\r\n                // Resetar e abortar se não houver resultados\r\n                if (response.items.length <= 0) {\r\n                    setSearchEnd(true);\r\n                    setPageToken('');\r\n                    return;\r\n                }\r\n                // Do contrário, preparar as próximas duas requests\r\n                const newItems = response.items.filter((i: any) => {\r\n                    return !(Object.keys(statistics).includes(i.id.videoId));\r\n                });\r\n                if (results) setResults(results.concat(newItems));\r\n\t\t\t\tconst videoIDs: string = newItems.map((i: any) => i.id.videoId).join();\r\n\t\t\t\tconst channelIDs: string = newItems.map((i: any) => i.snippet.channelId).join();\r\n\t\t\t\t// Segunda request usando as IDs dos canais para conseguir suas imagens\r\n\t\t\t\tconst xmlChannels = new XMLHttpRequest();\r\n\t\t\t\txmlChannels.onreadystatechange = () => {\r\n                    if (xmlChannels.readyState === 4 && xmlChannels.status === 200) {\r\n                        console.log(JSON.parse(xmlChannels.responseText));\r\n                        const newChannels = JSON.parse(xmlChannels.responseText).items.reduce(\r\n                            (ref: any, i: any) => {\r\n                                ref[i.id] = i.snippet.thumbnails.default.url;\r\n                                return ref;\r\n                            }, {}\r\n                        );\r\n                        const newChannelRef = channels;\r\n                        for (let [key, value] of Object.entries(newChannels)) {\r\n                            newChannelRef[key] = value as string;\r\n                        }\r\n                        setChannels(newChannelRef);\r\n                    }\r\n                }\r\n                xmlChannels.open(\r\n                    'GET',\r\n                    'https://www.googleapis.com/youtube/v3/channels?part=snippet&id=' +\r\n                    channelIDs + \r\n                    '&key=AIzaSyBbS29keWaqCw9J7NLNfhxFbvc0c5ceGIc'\r\n                );\r\n                xmlChannels.send();\r\n                // Terceira request usando as IDs dos videos para conseguir seus detalhes\r\n                const xmlDetails = new XMLHttpRequest();\r\n                xmlDetails.onreadystatechange = () => {\r\n                    if (xmlDetails.readyState === 4 && xmlDetails.status === 200) {\r\n                        console.log(JSON.parse(xmlDetails.responseText));\r\n                        const newStats = JSON.parse(xmlDetails.responseText).items.reduce(\r\n                            (ref: any, i: any) => {\r\n                                ref[i.id] = {\r\n                                    dislikeCount: i.statistics.dislikeCount,\r\n                                    likeCount: i.statistics.likeCount,\r\n                                    viewCount: i.statistics.viewCount,\r\n                                    description: i.snippet.description\r\n                                };\r\n                                return ref;\r\n                            }, {}\r\n                        );\r\n                        const newStatsRef = statistics;\r\n                        for (let [key, value] of Object.entries(newStats)) {\r\n                            newStatsRef[key] = {\r\n                                dislikeCount: (value as any).dislikeCount,\r\n                                likeCount: (value as any).likeCount,\r\n                                viewCount: (value as any).viewCount,\r\n                                description: (value as any).description\r\n                            }\r\n                        }\r\n                        setStatistics(newStatsRef);\r\n                    }\r\n                }\r\n                xmlDetails.open(\r\n                    'GET',\r\n                    'https://www.googleapis.com/youtube/v3/videos?part=statistics,snippet&id=' +\r\n                    videoIDs + \r\n                    '&key=AIzaSyBbS29keWaqCw9J7NLNfhxFbvc0c5ceGIc'\r\n                );\r\n                xmlDetails.send();\r\n                // Atualizar a token para o scroll infinito\r\n                if (response.nextPageToken) {\r\n                    setPageToken(response.nextPageToken);\r\n                } else {\r\n                    setPageToken('');\r\n                    setSearchEnd(true);\r\n                }\r\n\r\n            } else if (xmlResults.readyState === 4 && xmlResults.status >= 400) {\r\n                setSearchError(JSON.parse(xmlResults.responseText).error);\r\n            }\r\n        };\r\n        xmlResults.open(\r\n            'GET',\r\n            'https://www.googleapis.com/youtube/v3/search?part=snippet&type=video&videoEmbeddable=true&maxResults=12&q=' +\r\n            terms.replace(/[^a-zA-Z0-9 ]/g, '') +\r\n            '&pageToken=' + page +\r\n            '&key=AIzaSyBbS29keWaqCw9J7NLNfhxFbvc0c5ceGIc'\r\n        );\r\n        xmlResults.send();\r\n    }\r\n\r\n    // Lidar com a seleção de um resultado da lista como o resultado \"ativo\"\r\n    function handleSelect(id: string | null) {\r\n        setListTransition(true);\r\n        const prevId = activeResult;\r\n        if (prevId && id === null) {\r\n            setTimeout(() => {\r\n                    setActiveResult(id);\r\n                    document.getElementsByClassName(prevId)[0].scrollIntoView({behavior: \"auto\", block: \"center\"});\r\n                    setListTransition(false);\r\n                },\r\n                200\r\n            );\r\n        } else if (id) {\r\n            window.scrollTo({top: 0, left: 0, behavior: \"auto\"});\r\n            setListTransition(false);\r\n            setActiveResult(id);\r\n        }\r\n    }\r\n\r\n    // Renderizar\r\n\treturn (\r\n\t\t<div className=\"app\">\r\n\t\t\t<Pesquisa\r\n                terms={terms}\r\n                handleTerms={setTerms}\r\n                up={(results !== null || searchError !== null || searchEnd)}\r\n                handleSearch={search}\r\n                activeTitle={activeTitle}\r\n                handleClear={() => {\r\n                    handleSelect(null);\r\n                    setActiveTitle(null);\r\n                }}\r\n            />\r\n            {(searchError || (results === null && searchEnd)) ?\r\n            <Erro errorInfo={searchError} noResults={searchEnd} />\r\n            :\r\n            <Lista\r\n                results={results}\r\n                statistics={statistics}\r\n                channels={channels}\r\n                handleTitle={setActiveTitle}\r\n                activeResult={activeResult}\r\n                handleActiveResult={handleSelect}\r\n                transition={listTransition}\r\n            />}\r\n            {results && activeResult === null && <Carregamento hasMoreResults={!searchEnd} />}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app';\n\nimport './style/style.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}